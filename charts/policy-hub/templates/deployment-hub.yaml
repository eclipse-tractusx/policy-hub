###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "phub.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "phub.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "phub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "phub.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        image: "{{ .Values.policyhub.image }}"
        imagePullPolicy: "{{ .Values.policyhub.imagePullPolicy }}"
        env:
        - name: DOTNET_ENVIRONMENT
          value: "{{ .Values.dotnetEnvironment }}"
        {{- if .Values.postgresql.enabled }}
        - name: "POLICY_HUB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ template "phub.postgresSecretName" . }}"
              key: "password"
        - name: "CONNECTIONSTRINGS__POLICYHUBDB"
          value: "Server={{ template "phub.postgresql.primary.fullname" . }};Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.username }};Password=$(POLICY_HUB_PASSWORD);Ssl Mode={{ .Values.dbConnection.sslMode }};"
        {{- end }}
        {{- if not .Values.postgresql.enabled }}
        - name: "POLICY_HUB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.externalDatabase.existingSecret }}"
              key: "password"
        - name: "CONNECTIONSTRINGS__POLICYHUBDB"
          value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.username }};Password=$(POLICY_HUB_PASSWORD);Ssl Mode={{ .Values.dbConnection.sslMode }};"
        {{- end }}
        - name: "HEALTHCHECKS__0__PATH"
          value: "{{ .Values.healthChecks.startup.path}}"
        {{- if .Values.policyhub.healthChecks.startup.tags }}
        {{- toYaml .Values.policyhub.healthChecks.startup.tags | nindent 8 }}
        {{- end }}
        - name: "HEALTHCHECKS__1__PATH"
          value: "{{ .Values.healthChecks.readyness.path}}"
        - name: "HEALTHCHECKS__2__PATH"
          value: "{{ .Values.healthChecks.liveness.path}}"
        - name: "JWTBEAREROPTIONS__METADATAADDRESS"
          value: "{{ .Values.centralidpAddress }}{{ .Values.keycloak.central.jwtBearerOptions.metadataPath }}"
        - name: "JWTBEAREROPTIONS__REQUIREHTTPSMETADATA"
          value: "{{ .Values.keycloak.central.jwtBearerOptions.requireHttpsMetadata }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__VALIDAUDIENCE"
          value: "{{ .Values.keycloak.central.jwtBearerOptions.tokenValidationParameters.validAudience }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__VALIDISSUER"
          value: "{{ .Values.centralidpAddress }}{{ .Values.keycloak.central.jwtBearerOptions.tokenValidationParameters.validIssuerPath }}"
        - name: "JWTBEAREROPTIONS__REFRESHINTERVAL"
          value: "{{ .Values.keycloak.central.jwtBearerOptions.refreshInterval }}"
        - name: "SERILOG__MINIMUMLEVEL__Default"
          value: "{{ .Values.policyhub.logging.default }}"
        - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.PolicyHub.Service"
          value: "{{ .Values.policyhub.logging.businessLogic }}"
        - name: "SWAGGERENABLED"
          value: "{{ .Values.policyhub.swaggerEnabled }}"
        ports:
        - name: http
          containerPort: {{ .Values.portContainer }}
          protocol: TCP
        startupProbe:
          httpGet:
            path: {{ .Values.healthChecks.startup.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
          successThreshold: {{ .Values.startupProbe.successThreshold }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
        livenessProbe:
          httpGet:
            path: {{ .Values.healthChecks.liveness.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.healthChecks.readyness.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        resources:
          {{- toYaml .Values.policyhub.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

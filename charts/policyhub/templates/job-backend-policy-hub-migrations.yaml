###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.backend.policyhubmigrations.name }}
  annotations:
    "batch.kubernetes.io/job-tracking": "true"
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
spec:
  template:
    metadata:
      name: {{ .Values.backend.policyhubmigrations.name }}
    spec:
      restartPolicy: Never
      containers:
      - name: {{ .Values.backend.policyhubmigrations.name }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        image: "{{ .Values.backend.policyhubmigrations.image.name }}:{{ .Values.backend.policyhubmigrations.image.policyhubmigrationstag | default .Chart.AppVersion }}"
        imagePullPolicy: "Always"
        env:
          - name: DOTNET_ENVIRONMENT
            value: "{{ .Values.backend.dotnetEnvironment }}"
          {{- if .Values.postgresql.enabled }}
          - name: "POLICY_HUB_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.auth.existingSecret }}"
                key: "policy-hub-password"
          - name: "CONNECTIONSTRINGS__POLICYHUBDB"
            value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.policyHubUser }};Password=$(POLICY_HUB_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
          {{- end }}
          {{- if not .Values.postgresql.enabled }}
          - name: "POLICY_HUB_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.externalDatabase.secret }}"
                key: "policy-hub-password"
          - name: "CONNECTIONSTRINGS__POLICYHUBDB"
            value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.policyHubUser }};Password=$(POLICY_HUB_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
          {{- end }}
          - name: "SEEDING__TESTDATAENVIRONMENTS__0"
            value: "{{ .Values.backend.policyhubmigrations.seeding.testDataEnvironments }}"
          - name: "SEEDING__DATAPATHS__0"
            value: "{{ .Values.backend.policyhubmigrations.seeding.testDataPaths }}"
          - name: "SERILOG__MINIMUMLEVEL__Default"
            value: "{{ .Values.backend.policyhubmigrations.logging.default }}"
        ports:
        - name: http
          containerPort: {{ .Values.portContainer }}
          protocol: TCP
        resources:
          {{- toYaml .Values.backend.policyhubmigrations.resources | nindent 10 }}
